<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Video.js Sandbox</title>
    <link href="../dist/video-js.css" rel="stylesheet" type="text/css" />
    <script src="../dist/video.js"></script>
  </head>
  <body>
    <video-js
      id="vid1"
      controls
      muted
      preload="auto"
      width="640"
      height="264"
      poster="https://vjs.zencdn.net/v/oceans.png"
    >
      <source src="https://vjs.zencdn.net/v/oceans.mp4" type="video/mp4" />
      <source src="https://vjs.zencdn.net/v/oceans.webm" type="video/webm" />
      <source src="https://vjs.zencdn.net/v/oceans.ogv" type="video/ogg" />
      <track
        kind="captions"
        src="../docs/examples/shared/example-captions.vtt"
        srclang="en"
        label="English"
      />
    </video-js>

    <style>
      .vjs-transient-button.unmute-button span::before {
        content: "\f104";
        font-family: "VideoJS";
      }
    </style>

    <script>
      const player = videojs("#vid1");

      player.ready(function () {
        // Adds an unmute button that umutes and goes away when clicked
        player.one("playing", function () {
          if (this.muted()) {
            const unmuteButton = player.addChild("TransientButton", {
              controlText: "Unmute",
              position: "top left",
              className: "unmute-button",
              clickHandler: function () {
                this.player().muted(false);
                this.dispose();
              },
            });
            unmuteButton.show();
            console.log(unmuteButton.el());
          }
        });

        const track = player.addRemoteTextTrack({
          src:
            "data:text/vtt;base64," +
            btoa(`WEBVTT

00:00.000 --> 00:10.000
Recap

00:15.000 --> 00:20.000
Intro

00:40.000 --> 00:47.000
Credits

`),
          kind: "metadata",
          label: "skip_sections",
        }).track;

        let skipButtons = [];

        track.addEventListener("cuechange", function () {
          const cue = track.activeCues[0];
          console.log(cue);
          if (cue) {
            const skipButton = player.addChild("TransientButton", {
              controlText: `Skip ${cue.text}`,
              position: "bottom right",
              clickHandler: () => {
                player.currentTime(cue.endTime);
              },
            });
            skipButtons.push(skipButton);
            skipButton.show();
          } else {
            while (skipButtons.length > 0) {
              skipButtons.shift().dispose();
            }
          }
        });
        track.mode = "hidden";
      });
    </script>
  </body>
</html>
